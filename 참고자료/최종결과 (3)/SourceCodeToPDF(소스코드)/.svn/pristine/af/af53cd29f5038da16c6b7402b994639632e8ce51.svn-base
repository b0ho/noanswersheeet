<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="ko">
<head>
<!-- Generated by javadoc (1.8.0_73) on Wed Jun 08 13:07:09 KST 2016 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>CodeParser</title>
<meta name="date" content="2016-06-08">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="CodeParser";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/CodeParser.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../converter/CodeConverter.html" title="class in converter"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../converter/CodePrinter.html" title="class in converter"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?converter/CodeParser.html" target="_top">Frames</a></li>
<li><a href="CodeParser.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">converter</div>
<h2 title="Class CodeParser" class="title">Class CodeParser</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>converter.CodeParser</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">CodeParser</span>
extends java.lang.Object</pre>
<div class="block">주어진 소스코드 파일을 분석합니다.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>강승민</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../option/Option.html" title="class in option">Option</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#option">option</a></span></code>
<div class="block">옵션 값</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.Vector&lt;<a href="../converter/Token.html" title="class in converter">Token</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#tmpTokens">tmpTokens</a></span></code>
<div class="block">임시 저장용 토큰</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.util.Vector&lt;<a href="../converter/Token.html" title="class in converter">Token</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#tokens">tokens</a></span></code>
<div class="block">최종 변환된 토큰</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#CodeParser-option.Option-">CodeParser</a></span>(<a href="../option/Option.html" title="class in option">Option</a>&nbsp;op)</code>
<div class="block">생성자</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>private <a href="../converter/Token.html" title="class in converter">Token</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#getIndent-java.lang.String-int-converter.Token.tokenType-">getIndent</a></span>(java.lang.String&nbsp;line,
         int&nbsp;startIndex,
         <a href="../converter/Token.tokenType.html" title="enum in converter">Token.tokenType</a>&nbsp;type)</code>
<div class="block">주어진 문자열을 공백, 문자열, 주석을 기준으로 토큰화 합니다.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#keywordMatch-converter.Token-">keywordMatch</a></span>(<a href="../converter/Token.html" title="class in converter">Token</a>&nbsp;inp)</code>
<div class="block">문자열과 주석으로 구분되어진 토큰 이외의 일반 토큰에서 키워드가 있는 토큰을 찾습니다.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.util.Vector&lt;<a href="../converter/Token.html" title="class in converter">Token</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../converter/CodeParser.html#parse-java.io.File-">parse</a></span>(java.io.File&nbsp;code)</code>
<div class="block">소스코드 파일을 분석합니다.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="tmpTokens">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tmpTokens</h4>
<pre>private&nbsp;java.util.Vector&lt;<a href="../converter/Token.html" title="class in converter">Token</a>&gt; tmpTokens</pre>
<div class="block">임시 저장용 토큰</div>
</li>
</ul>
<a name="tokens">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tokens</h4>
<pre>private&nbsp;java.util.Vector&lt;<a href="../converter/Token.html" title="class in converter">Token</a>&gt; tokens</pre>
<div class="block">최종 변환된 토큰</div>
</li>
</ul>
<a name="option">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>option</h4>
<pre>private&nbsp;<a href="../option/Option.html" title="class in option">Option</a> option</pre>
<div class="block">옵션 값</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="CodeParser-option.Option-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>CodeParser</h4>
<pre>public&nbsp;CodeParser(<a href="../option/Option.html" title="class in option">Option</a>&nbsp;op)</pre>
<div class="block">생성자</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>op</code> - 옵션 정보입니다.</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="parse-java.io.File-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parse</h4>
<pre>public&nbsp;java.util.Vector&lt;<a href="../converter/Token.html" title="class in converter">Token</a>&gt;&nbsp;parse(java.io.File&nbsp;code)
                              throws java.io.IOException</pre>
<div class="block">소스코드 파일을 분석합니다.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>code</code> - 분석할 소스코드 파일</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>분석이 끝난 소스코드 파일의 토큰</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code> - 파일 읽기에 실패 했을 때 발생합니다.</dd>
</dl>
</li>
</ul>
<a name="getIndent-java.lang.String-int-converter.Token.tokenType-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIndent</h4>
<pre>private&nbsp;<a href="../converter/Token.html" title="class in converter">Token</a>&nbsp;getIndent(java.lang.String&nbsp;line,
                        int&nbsp;startIndex,
                        <a href="../converter/Token.tokenType.html" title="enum in converter">Token.tokenType</a>&nbsp;type)</pre>
<div class="block">주어진 문자열을 공백, 문자열, 주석을 기준으로 토큰화 합니다.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>line</code> - 토큰으로 변환할 문자열입니다.</dd>
<dd><code>startIndex</code> - 분석을 시작할 문자열의 위치입니다.</dd>
<dd><code>type</code> - 분석되는 문자열 성질입니다. 여러줄 문자열, 여러줄 주석에서 사용되어집니다. 그 외엔 NORMAL 타입입니다.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>공백, 문자열, 주석을 기준으로 분석된 토큰입니다.</dd>
</dl>
</li>
</ul>
<a name="keywordMatch-converter.Token-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>keywordMatch</h4>
<pre>private&nbsp;int[]&nbsp;keywordMatch(<a href="../converter/Token.html" title="class in converter">Token</a>&nbsp;inp)</pre>
<div class="block">문자열과 주석으로 구분되어진 토큰 이외의 일반 토큰에서 키워드가 있는 토큰을 찾습니다.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>inp</code> - 키워드가 있는지의 여부를 탐색할 토큰입니다.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>키워드를 기준으로 새롭게 분할된 토큰입니다.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/CodeParser.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../converter/CodeConverter.html" title="class in converter"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../converter/CodePrinter.html" title="class in converter"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?converter/CodeParser.html" target="_top">Frames</a></li>
<li><a href="CodeParser.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
